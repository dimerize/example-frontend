{"ast":null,"code":"import axios from 'axios';\nimport { BACKEND, LOGIN_SERVICE } from '../configs/config';\n\nvar parseResp = function parseResp(resp) {\n  var data = resp.data || {};\n  var contents = data.data || {};\n  return contents;\n};\n\nexport function getQuote() {\n  return axios.get(\"\".concat(BACKEND, \"/api/quote\")).then(parseResp).catch(function (error) {\n    checkForAuthorizationError(error); // TODO - Replace if building frontend & backend\n\n    console.error('Unable to get Get Quotes: ' + error.message); // throw new Error('Unable to get Get Quotes: ' + error.message);\n  });\n}\nexport function getQOD() {\n  return axios.get(\"\".concat(BACKEND, \"/api/quote/qod\")).then(parseResp).catch(function (error) {\n    checkForAuthorizationError(error); // TODO - Replace if building frontend & backend\n\n    console.error('Unable to get Get Quotes: ' + error.message); // throw new Error('Unable to get Get Quotes: ' + error.message);\n  });\n}\n/**\n * Checks whether the authorization status\n * @param error\n */\n\nvar checkForAuthorizationError = function checkForAuthorizationError(error) {\n  var resp = error.response || {};\n  var status = resp.status;\n\n  if (status === 401) {\n    // Automatically redirect client to the login page\n    window.location.href = LOGIN_SERVICE;\n  }\n};","map":{"version":3,"sources":["C:/Users/Omar Khan/work/example-frontend/template-frontend/src/services/quote.js"],"names":["axios","BACKEND","LOGIN_SERVICE","parseResp","resp","data","contents","getQuote","get","then","catch","error","checkForAuthorizationError","console","message","getQOD","response","status","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,aAAjB,QAAqC,mBAArC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACxB,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAL,IAAa,EAA1B;AACA,MAAMC,QAAQ,GAAGD,IAAI,CAACA,IAAL,IAAa,EAA9B;AAEA,SAAOC,QAAP;AACH,CALD;;AAOA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAOP,KAAK,CAACQ,GAAN,WAAaP,OAAb,iBACMQ,IADN,CACWN,SADX,EAEMO,KAFN,CAEY,UAAAC,KAAK,EAAI;AACZC,IAAAA,0BAA0B,CAACD,KAAD,CAA1B,CADY,CAEZ;;AACAE,IAAAA,OAAO,CAACF,KAAR,CAAc,+BAA+BA,KAAK,CAACG,OAAnD,EAHY,CAIZ;AACH,GAPN,CAAP;AAQH;AAED,OAAO,SAASC,MAAT,GAAkB;AACrB,SAAOf,KAAK,CAACQ,GAAN,WAAaP,OAAb,qBACFQ,IADE,CACGN,SADH,EAEFO,KAFE,CAEI,UAAAC,KAAK,EAAI;AACZC,IAAAA,0BAA0B,CAACD,KAAD,CAA1B,CADY,CAEZ;;AACAE,IAAAA,OAAO,CAACF,KAAR,CAAc,+BAA+BA,KAAK,CAACG,OAAnD,EAHY,CAIZ;AACH,GAPE,CAAP;AAQH;AAGD;;;;;AAIA,IAAMF,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACD,KAAD,EAAW;AAC1C,MAAMP,IAAI,GAAGO,KAAK,CAACK,QAAN,IAAkB,EAA/B;AACA,MAAMC,MAAM,GAAGb,IAAI,CAACa,MAApB;;AACA,MAAGA,MAAM,KAAK,GAAd,EAAkB;AACd;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBlB,aAAvB;AACH;AACJ,CAPD","sourcesContent":["import axios from 'axios';\nimport {BACKEND, LOGIN_SERVICE} from '../configs/config';\n\nconst parseResp = (resp) => {\n    const data = resp.data || {};\n    const contents = data.data || {};\n\n    return contents;\n};\n\nexport function getQuote() {\n    return axios.get(`${BACKEND}/api/quote`)\n                .then(parseResp)\n                .catch(error => {\n                    checkForAuthorizationError(error);\n                    // TODO - Replace if building frontend & backend\n                    console.error('Unable to get Get Quotes: ' + error.message);\n                    // throw new Error('Unable to get Get Quotes: ' + error.message);\n                });\n}\n\nexport function getQOD() {\n    return axios.get(`${BACKEND}/api/quote/qod`)\n        .then(parseResp)\n        .catch(error => {\n            checkForAuthorizationError(error);\n            // TODO - Replace if building frontend & backend\n            console.error('Unable to get Get Quotes: ' + error.message);\n            // throw new Error('Unable to get Get Quotes: ' + error.message);\n        });\n}\n\n\n/**\n * Checks whether the authorization status\n * @param error\n */\nconst checkForAuthorizationError = (error) => {\n    const resp = error.response || {};\n    const status = resp.status;\n    if(status === 401){\n        // Automatically redirect client to the login page\n        window.location.href = LOGIN_SERVICE;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}